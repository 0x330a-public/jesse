/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export declare function registerFid(account: Account, recoveryAddress?: string | undefined | null): Promise<number>
export declare function addKey(account: Account, keyHex: string): Promise<boolean>
export declare function transferFname(account: Account, fname: string, toFid: number): Promise<boolean>
export declare function registerFname(account: Account, fname: string): Promise<boolean>
/** Get the registered fid of an ethereum address, or 0 if it's unregistered */
export declare function fidOfAddress(addressHex: string): Promise<number>
/** Return the owner of the fname as an optional fid (if it is owned) */
export declare function fidOfFname(fname: string): Promise<number | null>
/** Holder class for the signer that can be used in registration and fname related operations */
export declare class Account {
  static fromMnemonic(mnemonic: string): Account
  static fromPrivateKeyHex(privateKeyHex: string): Account
}
